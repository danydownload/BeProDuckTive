package com.example.beproducktive.ui.tasks

import android.view.LayoutInflater
import android.view.ViewGroup
import androidx.core.content.ContextCompat
import androidx.recyclerview.widget.RecyclerView
import com.example.beproducktive.R
import com.example.beproducktive.data.Task
import com.example.beproducktive.data.TaskPriority
import com.example.beproducktive.databinding.ItemTaskBinding

class TasksViewHolder(
    private val binding: ItemTaskBinding // autogenerated
) : RecyclerView.ViewHolder(binding.root) {

    fun bind(task: Task) {
        binding.apply {
            checkboxCompleted.isChecked = task.completed
            textviewTaskTitle.text = task.taskTitle
            setTaskPriority(task)
            deadline.text = task.deadlineFormatted
        }
    }

    private fun setTaskPriority(task: Task) {
        binding.apply {
            priority.text = itemView.context.resources.getString(
                R.string.priority_value,
                task.priority.name
            )

            val textColor = when (task.priority) {
                TaskPriority.HIGH -> R.color.red
                TaskPriority.MEDIUM -> R.color.yellow
                TaskPriority.LOW -> R.color.green
            }

            priority.setTextColor(ContextCompat.getColor(itemView.context, textColor))
        }
    }

    companion object {
        fun create(parent: ViewGroup): TasksViewHolder {
            val view = LayoutInflater.from(parent.context)
                .inflate(R.layout.item_task, parent, false)
            val binding = ItemTaskBinding.bind(view)
            return TasksViewHolder(binding)
        }
    }
}